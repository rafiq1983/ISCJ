@page
@model ISCJ.Pages.Financials.AddInvoiceModel


@{
    ViewData["Title"] = "Contacts";
    Layout = "~/Pages/Shared/_LayoutModern.cshtml";

}

<style>

    #olErrors li {
        color: red;
    }
</style>
<div asp-validation-summary="All"></div>
<form method="post" name="frmMembershipCreate">
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-9">
            <h2>Add Invoice</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
                </li>
                <li class="breadcrumb-item">
                    Financials
                </li>
                <li class="active breadcrumb-item">
                    <strong>Add Invoice</strong>
                </li>
            </ol>
        </div>
    </div>

    <div class="wrapper wrapper-content animated fadeInRight">

        <div class="row">
            <div class="col-lg-12">


                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Invoice Amount</h5>

                    </div>


                    <div class="ibox-content">
                        <div class="form-group  row">



                            <label class="col-sm-2 col-form-label">Invoice Type</label>
                            <div class="col-sm-10">
                                <select asp-for="@Model.InvoiceType" class="form-control m-b" asp-items="@Model.InvoiceTypes">
                                    <option value="">--Select--</option>
                                </select>
                                <span asp-validation-for="@Model.InvoiceType" class="text-danger"></span>

                            </div>
                            <div class="infont col-md-3 col-sm-4"><a href="#" onclick="Show_AddInvoiceTypePopup()"><i class="fa fa-plus-square-o"></i>Add Invoice Type</a></div>
                        </div>

                        <div class="form-group  row">
                            <label class="col-sm-2 col-form-label">Description</label>

                            <div class="col-sm-10">
                                <input type="text" placeholder="Invoice Description" class="form-control" asp-for="@Model.InvoiceDescription" />

                                <span asp-validation-for="@Model.InvoiceDescription" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="form-group  row">
                            <label class="col-sm-2 col-form-label">Amount</label>

                            <div class="col-sm-10">
                                <input type="text" placeholder="Invoice Amount" class="form-control" asp-for="@Model.InvoiceAmount" />

                                <span asp-validation-for="@Model.InvoiceAmount" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="form-group  row">
                            <label class="col-sm-2 col-form-label">Due Date</label>

                            <div class="col-sm-10">
                                <input type="date" placeholder="Due Date" class="form-control" asp-for="@Model.InvoiceDueDate" />

                                <span asp-validation-for="@Model.InvoiceDueDate" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="form-group  row">
                            <label class="col-sm-2 col-form-label">Contact</label>
                            <div class="col-sm-10">
                                <input type="text" placeholder="Type contact name here" autocomplete="off"
                                       data-url="@Url.Content("~/api/Contact/Search")" data-target-id="ReferenceId"
                                       class="autocomplete form-control" asp-for="@Model.Name" />

                                <input type="hidden" asp-for="@Model.ReferenceId" />
                                <span asp-validation-for="@Model.ReferenceId" class="text-danger"></span>
                            </div>
                        </div>


                        <div class="hr-line-dashed"></div>
                    </div>
                </div>
                <div class="ibox " style="display:none">
                    <div class="ibox-title">
                        <h5>Fees</h5>
                    </div>
                    <div class="ibox-content">
                        @{ var i = 0; }
                        <table width="100%">
                            @foreach (var product in Model.Products)
                            {
                                <tr>
                                    <td><input type="checkbox" asp-for="@Model.BillingInstructions[i].IsSelected" /></td>
                                    <td><label class="col-sm-10 col-form-label">@Model.Products[i].Description</label></td>
                                    <td><label class="col-sm-8 col-form-label">$ @Model.Products[i].Price</label></td>
                                    <input type="hidden" value="@Model.Products[i].ProductCode" asp-for="@Model.BillingInstructions[i].ProductCode" />
                                    <td>
                                        <div class="col-sm-10">
                                            <select asp-for="@Model.BillingInstructions[i].ProductCount">
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                            </select>

                                        </div>
                                    </td>
                                </tr>
                                i = i + 1;
                            }
                        </table>
                    </div>
                </div>
            </div>

            <div class="modal inmodal" id="addInvoiceTypeModal" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content animated bounceInRight">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                            <h4 class="modal-title">Add Invoice Type</h4>
                        </div>
                        <div class="modal-body">
                           
                            <div class="form-group row" id="dvInvoiceTypeAddErrors" style="display:none;">
                                <div class="col-sm-10">
                                    <h5>Error(s)</h5>
                                    <div>
                                        <ul class="olErrors" id="olErrors">
                                            <li></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                            </div>

                           
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Name:</label>

                                <div class="col-sm-10">
                                    <input type="text" placeholder="Invoice Type Name" class="form-control" id="invoiceTypeName" />

                                    <span asp-validation-for="@Model.InvoiceAmount" class="text-danger"></span>

                                </div>
                            </div>
                           
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="btnAddInvoiceType">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">

        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="form-group row" style="text-align:right">
                    <div class="col-sm-12 col-sm-offset-2">
                        <button class="btn btn-white btn-sm" type="submit" asp-page-handler="Cancel">Cancel</button>

                        <button class="btn btn-white btn-sm" type="submit" asp-page-handler="Reset">Reset</button>

                        <button class="btn btn-primary btn-sm" type="submit" asp-page-handler="Save">Save</button>

                    </div>
                    s
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts
{
    <script src="https://cdn.rawgit.com/xcash/bootstrap-autocomplete/v2.0.0/dist/latest/bootstrap-autocomplete.min.js"></script>

    <script language="javascript">
        $("document").ready(function() {
            SetupContactAutoComplete();

            $("#btnAddInvoiceType").click(function() {
                invoiceTypeName = $("#invoiceTypeName").val();

                //This is how you send data to single string variable in webapi.  If FromBody is set, the data must be sent as json string.
                $.ajax({
                    type: "POST",
                    url: "/api/invoice/invoiceType",
                    contentType: "application/json; charset=utf-8",

                    data: "'" + invoiceTypeName + "'",
                    success: function(d) {
                        $('#addInvoiceTypeModal').modal('hide');
                        RefreshInvoiceTypeDropdown();
                    },
                    error: function(response) {
                        alert("Error: " + JSON.parse(response.responseText));
                    }
                });
                
            });

            $(".modal1").click(function() {
                $("#olErrors").empty();
                $("#dvErrorsRow").css("display", "none");
                $('.modal-body').find('input').each(function() {
                    $(this).val("");

                });

                $('.modal-body').find('select').each(function() {
                    $(this).val("1");

                });

            });
            $("#btnSave").click(function() {
                var personAddress = {
                    AddressLine1: $("#txtstreet").val(),
                    AddressLine2: "",
                    City: $("#txtcity").val(),
                    StateCode: $("#txtstate").val(),
                    ZipCode: $("#txtzip").val(),
                    CountryCode: ""
                }
                var contact = {
                    FirstName: $("#txtfirstname").val(),
                    LastName: $("#txtlastname").val(),
                    Address: personAddress,
                    HomePhone: $("#txthomephone").val(),
                    CellPhone: $("#txtcellphone").val(),
                    MiddleName: $("#txtmiddlename").val(),
                    Email: $("#txtemail").val(),
                    ContactType: $("#slContactTypes").val(),
                    Gender: $("#slgender").val()
                }

                var AddContactInputObj = {
                    Contact: contact
                }
                var p = JSON.stringify(AddContactInputObj);
                var pagePath = window.location.origin;
                pagePath += "/api/Contact";
                $.ajax({
                    type: "POST",
                    url: pagePath,
                    contentType: "application/json; charset=utf-8",
                    data: p,
                    dataType: "json",
                    success: function(d) {
                        $("#olErrors").empty();
                        $('#exampleModal').find('input:text').val('');
                        $('#exampleModal').modal('hide');
                    },
                    error: function(response) {
                        $("#olErrors").empty();
                        $("#dvErrorsRow").css("display", "block");
                        if (response.status === 400) {
                            $("#olErrors").empty();
                            var errorobj = JSON.parse(response.responseText);
                            $.each(errorobj,
                                function(i, val) {
                                    $("#olErrors").append($("<li>").text(val.errorMessage));
                                });
                        } else {
                            alert("Error");
                        }
                    }
                });


            });

        });

        function SetupContactAutoComplete() {

            $(".autocomplete").autoComplete({
                minLength: 1,
                formatResult: function(item) {
                    console.log("Format result called with item " + item);
                    return {
                        id: item.guid,
                        text: item.firstName + " " + item.lastName
                    }
                },

                events: {
                    searchPost: function(resultsFromServer) {
                        console.log("Search Post Called. " + resultsFromServer[0].guid);
                        return resultsFromServer;
                    }
                }

            });

            $(".autocomplete").on('autocomplete.select',
                function(evt, item) {
                    $("#" + evt.currentTarget.attributes["data-target-id"].value).val(item.guid);
                    console.log(evt.currentTarget.attributes["data-target-id"].value);
                    console.log("added item " + item.guid);
                    evt.preventDefault();
                });

            $(".autocomplete").change(function(evt) {
                console.log("Textbox change");
                console.log($("#" + evt.currentTarget.attributes["data-target-id"].value));
                console.log($("#" + evt.currentTarget.attributes["data-target-id"].value).val());

                $("#" + evt.currentTarget.attributes["data-target-id"].value).val("");

            });
        }

        $("#btnAddNewEnrollment").click(function(evt) {

            evt.preventDefault();
            _enrollments = [];
            var i = 0;
            $(".enrollment:checkbox:checked").each(function() {
                var enr = $(this).data("enrollment")
                var obj = JSON.parse(decodeURIComponent(enr));
                _enrollments[i] = obj;
                i = i + 1;
            });

            if (i > 0) {
                $("#AutoEnrollmentJson").val(JSON.stringify(_enrollments));
                $("#btnPostSelectedEnrollments").click();
                $("#addInvoiceTypeModal").modal("hide");
            } else {
                $("#dvInvoiceTypeAddErrors").css("display", "block");

            }
        });

        function Show_AddInvoiceTypePopup() {

            $("#addInvoiceTypeModal").modal();
        }

        function RefreshInvoiceTypeDropdown() {

            $.ajax({
                type: "GET",
                url: "/api/invoice/invoiceTypes",
                
                success: function (result) {
                    
                    var $dropdown = $("#InvoiceType"); //just putting $ in front of variable to denote this is a jquery variable.
                    
                    $dropdown.empty();
                    $dropdown.append($("<option />").val("").text("--select--"));
                    $.each(result, function () {
                        
                        $dropdown.append($("<option />").val(this.key).text(this.value));
                    });
                },
                error: function(response) {
                    alert("Error: " + JSON.parse(response.responseText));
                }
            });

        }

    </script>
}


